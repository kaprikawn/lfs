#!/bin/bash

LFS=/mnt/lfs
LFS_TGT=$(uname -m)-lfs-linux-gnu
rundir=$PWD
logfile=$rundir/log.txt


gccVer=6.3.0
binutilsVer=2.27
mpfrVer=3.1.5
gmpVer=6.1.2
mpcVer=1.0.3

function getDirectory() {
  program=$1
  
}

function log() {
  echo $1 >> $logfile
}

function download() {
  cd $LFS/sources
  
  if [ -e $2 ]; then
    echo "$2 already downloaded"
  else
    wget $1
  fi
  
  if [ ! -e $2 ]; then
    echo "failed to download $2"
    exit 1
  fi
}

function extract() {
  tarball=$1
  directory=$( sed -E "s/\.tar\.[a-z0-9]{2,3}$//" <<< $tarball )
  filename=$( basename $1==$tarball )
  extension="${filename##*.}"
  
  cd $LFS/sources
  
  if [ -d $directory ]; then
    rm -rf $directory
  fi
  
  log "extracting $tarball into $directory"
  
  tar -xf $tarball
  
  if [ ! -d $directory ]; then
    log "$tarball does not appear to have unpacked into $directory"
    exit 1
  fi
}

function checkRetVal() {
  if [ $1 -ne 0 ]; then
    echo "checkRetVal failed"
    log "checkRetVal failed"
    exit 1
  fi
  log "retVal check ok"
}

function callMake() {
  log "calling make"
  make
  if [ $? -eq 0 ]; then
    log "make ran successfully"
  else
    log "make was unsuccessful"
    exit 1
  fi
}

function callMakeInstall() {
  log "calling make install"
  make install
  if [ $? -eq 0 ]; then
    log "make install ran successfully"
  else
    log "make install was unsuccessful"
    exit 1
  fi
}

if [ -e $logfile ]
then
  rm -f $logfile
fi

function BinutilsPass1() {
  ver=$binutilsVer
  archiveType=bz2
  program=binutils-$ver
  archive=$program.tar.$archiveType
  url=http://ftp.gnu.org/gnu/binutils/$archive
  section="5.4. Binutils-2.27 - Pass 1"

  log "$section"

  download $url $archive
  extract $archive

  cd $program
  
  
  mkdir -v build
  cd build
  checkRetVal $?

  log "starting configure"
  ../configure --prefix=/tools          \
             --with-sysroot=$LFS        \
             --with-lib-path=/tools/lib \
             --target=$LFS_TGT          \
             --disable-nls              \
             --disable-werror

  checkRetVal $?

  callMake

  case $(uname -m) in
    x86_64) mkdir -v /tools/lib && ln -sv lib /tools/lib64 ;;
  esac

  callMakeInstall

  rm -rf $LFS/sources/$program
}

function GCCPass1() {
  ver=$gccVer
  archiveType=bz2
  program=gcc-$ver
  archive=$program.tar.$archiveType
  url=http://ftp.gnu.org/gnu/gcc/gcc-$ver/$archive
  section="5.5. GCC-6.3.0 - Pass 1"
  
  log "$section"
  
  download $url $archive
  download http://www.mpfr.org/mpfr-$mpfrVer/mpfr-$mpfrVer.tar.xz mpfr-$mpfrVer.tar.xz
  download http://ftp.gnu.org/gnu/gmp/gmp-$gmpVer.tar.xz gmp-$gmpVer.tar.xz
  download http://www.multiprecision.org/mpc/download/mpc-$mpcVer.tar.gz mpc-$mpcVer.tar.gz
  
  extract $archive
  
  cd $LFS/sources/$program
  
  tar -xf ../mpfr-$mpfrVer.tar.xz
  mv -v mpfr-$mpfrVer mpfr
  tar -xf ../gmp-$gmpVer.tar.xz
  mv -v gmp-$gmpVer gmp
  tar -xf ../mpc-1.0.3.tar.gz
  mv -v mpc-$mpcVer mpc
  
  for file in gcc/config/{linux,i386/linux{,64}}.h
  do
    cp -uv $file{,.orig}
    sed -e 's@/lib\(64\)\?\(32\)\?/ld@/tools&@g' \
        -e 's@/usr@/tools@g' $file.orig > $file
    echo '
#undef STANDARD_STARTFILE_PREFIX_1
#undef STANDARD_STARTFILE_PREFIX_2
#define STANDARD_STARTFILE_PREFIX_1 "/tools/lib/"
#define STANDARD_STARTFILE_PREFIX_2 ""' >> $file
    touch $file.orig
  done
  
  case $(uname -m) in
    x86_64)
      sed -e '/m64=/s/lib64/lib/' \
          -i.orig gcc/config/i386/t-linux64
   ;;
  esac
  
  mkdir -v build
  cd build
  checkRetVal $?

  log "starting configure"
  ../configure                                       \
    --target=$LFS_TGT                              \
    --prefix=/tools                                \
    --with-glibc-version=2.11                      \
    --with-sysroot=$LFS                            \
    --with-newlib                                  \
    --without-headers                              \
    --with-local-prefix=/tools                     \
    --with-native-system-header-dir=/tools/include \
    --disable-nls                                  \
    --disable-shared                               \
    --disable-multilib                             \
    --disable-decimal-float                        \
    --disable-threads                              \
    --disable-libatomic                            \
    --disable-libgomp                              \
    --disable-libmpx                               \
    --disable-libquadmath                          \
    --disable-libssp                               \
    --disable-libvtv                               \
    --disable-libstdcxx                            \
    --enable-languages=c,c++
  checkRetVal $?
  
  callMake
  
  callMakeInstall

  rm -rf $LFS/sources/$program
}

function LinuxApiHeaders() {
  ver=4.9.9
  archiveType=xz
  program=linux-$ver
  archive=$program.tar.$archiveType
  url=https://www.kernel.org/pub/linux/kernel/v4.x/$archive
  section="5.6. Linux-4.9.9 API Headers"
  
  log "$section"
  
  download $url $archive
  
  extract $archive
  
  cd $program
  checkRetVal $?
  
  make mrproper
  checkRetVal $?
  
  make INSTALL_HDR_PATH=dest headers_install
  checkRetVal $?
  cp -rv dest/include/* /tools/include
  checkRetVal $?
  
  
}

function Glibc() {
  ver=2.25
  archiveType=xz
  program=glibc-$ver
  archive=$program.tar.$archiveType
  url=http://ftp.gnu.org/gnu/glibc/$archive
  section="5.7. Glibc-2.25"
  
  log "$section"
  
  download $url $archive
  
  extract $archive
  cd $program
  checkRetVal $?
  
  mkdir -v build
  cd build
  checkRetVal $?
  
  log "starting configure"
  ../configure                             \
      --prefix=/tools                    \
      --host=$LFS_TGT                    \
      --build=$(../scripts/config.guess) \
      --enable-kernel=2.6.32             \
      --with-headers=/tools/include      \
      libc_cv_forced_unwind=yes          \
      libc_cv_c_cleanup=yes
  checkRetVal $?
  
  log "configure finished"
  
  callMake
  
  callMakeInstall

  log "glibc finished"
}

function Libstdc() {
  section="5.8. Libstdc++-6.3.0"
  log "$section"
  extract gcc-$gccVer.tar.bz2
  cd gcc-$gccVer
  checkRetVal $?
  
  mkdir -v build
  cd build
  
  log "starting configure"
  ../libstdc++-v3/configure           \
    --host=$LFS_TGT                 \
    --prefix=/tools                 \
    --disable-multilib              \
    --disable-nls                   \
    --disable-libstdcxx-threads     \
    --disable-libstdcxx-pch         \
    --with-gxx-include-dir=/tools/$LFS_TGT/include/c++/$gccVer
  checkRetVal $?
  
  callMake
  
  callMakeInstall
  
}

function BinutilsPass2() {
  ver=$binutilsVer
  archiveType=bz2
  program=binutils-$ver
  archive=$program.tar.$archiveType
  url=http://ftp.gnu.org/gnu/binutils/$archive
  section="5.9. Binutils-2.27 - Pass 2"

  log "$section"

  #download $url $archive
  extract $archive
  
  cd $program
  checkRetVal $?
  
  mkdir -v build
  cd build
  
  CC=$LFS_TGT-gcc                \
  AR=$LFS_TGT-ar                 \
  RANLIB=$LFS_TGT-ranlib         \
  ../configure                   \
      --prefix=/tools            \
      --disable-nls              \
      --disable-werror           \
      --with-lib-path=/tools/lib \
      --with-sysroot
  checkRetVal $?
  
  callMake
  
  callMakeInstall
  
  make -C ld clean
  checkRetVal $?
  make -C ld LIB_PATH=/usr/lib:/lib
  checkRetVal $?
  cp -v ld/ld-new /tools/bin
  checkRetVal $?
  
  log "finished $section"
}

function GCCPass2() {
  ver=$gccVer
  archiveType=bz2
  program=gcc-$ver
  archive=$program.tar.$archiveType
  url=http://ftp.gnu.org/gnu/gcc/gcc-$ver/$archive
  section="5.10. GCC-6.3.0 - Pass 2"
  
  log "$section"
  
  extract $archive
  cd $program
  checkRetVal $?
  
  cat gcc/limitx.h gcc/glimits.h gcc/limity.h > \
  `dirname $($LFS_TGT-gcc -print-libgcc-file-name)`/include-fixed/limits.h
  
  for file in gcc/config/{linux,i386/linux{,64}}.h
  do
    cp -uv $file{,.orig}
    sed -e 's@/lib\(64\)\?\(32\)\?/ld@/tools&@g' \
        -e 's@/usr@/tools@g' $file.orig > $file
    echo '
#undef STANDARD_STARTFILE_PREFIX_1
#undef STANDARD_STARTFILE_PREFIX_2
#define STANDARD_STARTFILE_PREFIX_1 "/tools/lib/"
#define STANDARD_STARTFILE_PREFIX_2 ""' >> $file
    touch $file.orig
  done
  
  case $(uname -m) in
    x86_64)
      sed -e '/m64=/s/lib64/lib/' \
          -i.orig gcc/config/i386/t-linux64
    ;;
  esac
  
  tar -xf ../mpfr-$mpfrVer.tar.xz
  mv -v mpfr-$mpfrVer mpfr
  tar -xf ../gmp-$gmpVer.tar.xz
  mv -v gmp-$gmpVer gmp
  tar -xf ../mpc-1.0.3.tar.gz
  mv -v mpc-$mpcVer mpc
  
  mkdir -v build
  cd build
  checkRetVal $?
  
  CC=$LFS_TGT-gcc                                    \
  CXX=$LFS_TGT-g++                                   \
  AR=$LFS_TGT-ar                                     \
  RANLIB=$LFS_TGT-ranlib                             \
  ../configure                                       \
      --prefix=/tools                                \
      --with-local-prefix=/tools                     \
      --with-native-system-header-dir=/tools/include \
      --enable-languages=c,c++                       \
      --disable-libstdcxx-pch                        \
      --disable-multilib                             \
      --disable-bootstrap                            \
      --disable-libgomp
  checkRetVal $?
  
  callMake
  
  callMakeInstall
  
  ln -sv gcc /tools/bin/cc
  
  echo 'int main(){}' > dummy.c
  cc dummy.c
  readelf -l a.out | grep ': /tools' >> $logfile
  rm -v dummy.c a.out
  
  
  log "finished $section"
  
}

function TclCore() {
  ver=8.6.6
  archiveType=gz
  program=tcl$ver
  archive=tcl-core$ver-src.tar.gz
  url=http://sourceforge.net/projects/tcl/files/Tcl/$ver/$archive
  section="5.11. Tcl-core-8.6.6"

  log "$section"
  
  download $url $archive
  
  cd $LFS/sources
  tar -xf $archive
  checkRetVal $?
  
  cd tcl$ver
  checkRetVal $?
  
  cd unix
  checkRetVal $?
  
  log "starting configure"
  ./configure --prefix=/tools
  checkRetVal $?
  
  callMake
  
  callMakeInstall
  
  chmod -v u+w /tools/lib/libtcl8.6.so
  checkRetVal $?
  
  make install-private-headers
  checkRetVal $?
  
  ln -sv tclsh8.6 /tools/bin/tclsh
  
  log "finished $section"
}

function Expect() {
  ver=5.45
  archiveType=gz
  program=expect$ver
  archive=expect5.45.tar.gz
  url=http://prdownloads.sourceforge.net/expect/$archive
  section="5.12. Expect-5.45"

  log "$section"
  
  download $url $archive
  
  cd $LFS/sources
  tar -xf $archive
  checkRetVal $?
  
  cd expect$ver
  checkRetVal $?
  
  cp -v configure{,.orig}
  sed 's:/usr/local/bin:/bin:' configure.orig > configure
  
  log "starting configure"
  ./configure --prefix=/tools       \
              --with-tcl=/tools/lib \
              --with-tclinclude=/tools/include
  checkRetVal $?
  
  callMake
  
  make SCRIPTS="" install
  checkRetVal $?
  
  log "finished $section"
}

function DejaGNU() {
  ver=1.6
  archiveType=gz
  program=dejagnu-$ver
  archive=$program.tar.$archiveType
  url=http://ftp.gnu.org/gnu/dejagnu/$archive
  section="5.13. DejaGNU-1.6"
  
  log "$section"
  
  download $url $archive
  
  extract $archive
  cd $program
  checkRetVal $?
  
  log "starting configure"
  ./configure --prefix=/tools
  checkRetVal $?
  
  callMake
  
  callMakeInstall
  
  log "finished $section"
}

function Check() {
  ver=0.11.0
  archiveType=gz
  program=check-$ver
  archive=$program.tar.$archiveType
  url=https://github.com/libcheck/check/releases/download/$ver/$archive
  section="5.14. Check-0.11.0"
  
  log "$section"
  
  download $url $archive
  
  extract $archive
  cd $program
  checkRetVal $?
  
  log "starting configure"
  PKG_CONFIG= ./configure --prefix=/tools
  checkRetVal $?
  
  callMake
  
  callMakeInstall
  
  log "finished $section"
}

function Ncurses() {
  ver=6.0
  archiveType=gz
  program=ncurses-$ver
  archive=$program.tar.$archiveType
  url=http://ftp.gnu.org/gnu//ncurses/$archive
  section="5.15. Ncurses-6.0"
  
  log "$section"
  
  download $url $archive
  
  extract $archive
  cd $program
  checkRetVal $?
  
  sed -i s/mawk// configure
  
  log "starting configure"
  ./configure --prefix=/tools \
            --with-shared   \
            --without-debug \
            --without-ada   \
            --enable-widec  \
            --enable-overwrite
  checkRetVal $?
  
  callMake
  
  callMakeInstall
  
  log "finished $section"
}

function Bash() {
  ver=4.4
  archiveType=gz
  program=bash-$ver
  archive=$program.tar.$archiveType
  url=http://ftp.gnu.org/gnu/bash/$archive
  section="5.16. Bash-4.4"
  
  log "$section"
  
  download $url $archive
  
  extract $archive
  cd $program
  checkRetVal $?
  
  log "starting configure"
  ./configure --prefix=/tools --without-bash-malloc
  checkRetVal $?
  
  callMake
  
  callMakeInstall
  
  ln -sv bash /tools/bin/sh
  
  log "finished $section"
}

function Bison() {
  ver=3.0.4
  archiveType=xz
  program=bison-$ver
  archive=$program.tar.$archiveType
  url=http://ftp.gnu.org/gnu/bison/$archive
  section="5.17. Bison-3.0.4"
  
  log "$section"
  
  download $url $archive
  
  extract $archive
  cd $program
  checkRetVal $?
  
  log "starting configure"
  ./configure --prefix=/tools
  checkRetVal $?
  
  callMake
  
  callMakeInstall
  
  log "finished $section"
}

function Bzip2() {
  ver=1.0.6
  archiveType=gz
  program=bzip2-$ver
  archive=$program.tar.$archiveType
  url=http://www.bzip.org/$ver/$archive
  section="5.18. Bzip2-1.0.6"
  
  log "$section"
  
  download $url $archive
  
  extract $archive
  cd $program
  checkRetVal $?
  
  callMake
  
  make PREFIX=/tools install
  checkRetVal $?
  
  log "finished $section"
}

function Coreutils() {
  ver=8.26
  archiveType=xz
  program=coreutils-$ver
  archive=$program.tar.$archiveType
  url=http://ftp.gnu.org/gnu/coreutils/$archive
  section="5.19. Coreutils-8.26"
  
  log "$section"
  
  download $url $archive
  
  extract $archive
  cd $program
  checkRetVal $?
  
  log "starting configure"
  ./configure --prefix=/tools --enable-install-program=hostname
  checkRetVal $?
  
  callMake
  
  callMakeInstall
  
  log "finished $section"
}

function Diffutils() {
  ver=3.5
  archiveType=xz
  program=diffutils-$ver
  archive=$program.tar.$archiveType
  url=http://ftp.gnu.org/gnu/diffutils/$archive
  section="5.20. Diffutils-3.5"
  
  log "$section"
  
  download $url $archive
  
  extract $archive
  cd $program
  checkRetVal $?
  
  log "starting configure"
  ./configure --prefix=/tools
  checkRetVal $?
  
  callMake
  
  callMakeInstall
  
  log "finished $section"
}

function File() {
  ver=5.30
  archiveType=gz
  program=file-$ver
  archive=$program.tar.$archiveType
  url=ftp://ftp.astron.com/pub/file/$archive
  section="5.21. File-5.30"
  
  log "$section"
  
  download $url $archive
  
  extract $archive
  cd $program
  checkRetVal $?
  
  log "starting configure"
  ./configure --prefix=/tools
  checkRetVal $?
  
  callMake
  
  callMakeInstall
  
  log "finished $section"
}

function Findutils() {
  ver=4.6.0
  archiveType=gz
  program=findutils-$ver
  archive=$program.tar.$archiveType
  url=http://ftp.gnu.org/gnu/findutils/$archive
  section="5.22. Findutils-4.6.0"
  
  log "$section"
  
  download $url $archive
  
  extract $archive
  cd $program
  checkRetVal $?
  
  log "starting configure"
  ./configure --prefix=/tools
  checkRetVal $?
  
  callMake
  
  callMakeInstall
  
  log "finished $section"
}

function Gawk() {
  ver=4.1.4
  archiveType=gz
  program=gawk-$ver
  archive=$program.tar.$archiveType
  url=http://ftp.gnu.org/gnu/gawk/$archive
  section="5.23. Gawk-4.1.4"
  
  log "$section"
  
  download $url $archive
  
  extract $archive
  cd $program
  checkRetVal $?
  
  log "starting configure"
  ./configure --prefix=/tools
  checkRetVal $?
  
  callMake
  
  callMakeInstall
  
  log "finished $section"
}

function Gettext() {
  ver=0.19.8.1
  archiveType=xz
  program=gettext-$ver
  archive=$program.tar.$archiveType
  url=http://ftp.gnu.org/gnu/gettext/$archive
  section="5.24. Gettext-0.19.8.1"
  
  log "$section"
  
  download $url $archive
  
  extract $archive
  cd $program
  checkRetVal $?
  
  cd gettext-tools
  checkRetVal $?
  
  log "starting configure"
  EMACS="no" ./configure --prefix=/tools --disable-shared
  checkRetVal $?
  
  make -C gnulib-lib
  checkRetVal $?
  make -C intl pluralx.c
  checkRetVal $?
  make -C src msgfmt
  checkRetVal $?
  make -C src msgmerge
  checkRetVal $?
  make -C src xgettext
  checkRetVal $?
  
  cp -v src/{msgfmt,msgmerge,xgettext} /tools/bin
  checkRetVal $?
  
  log "finished $section"
}

function Grep() {
  ver=3.0
  archiveType=xz
  program=grep-$ver
  archive=$program.tar.$archiveType
  url=http://ftp.gnu.org/gnu/grep/$archive
  section="5.25. Grep-3.0"
  
  log "$section"
  
  download $url $archive
  
  extract $archive
  cd $program
  checkRetVal $?
  
  log "starting configure"
  ./configure --prefix=/tools
  checkRetVal $?
  
  callMake
  
  callMakeInstall
  
  log "finished $section"
}

function Gzip() {
  ver=1.8
  archiveType=xz
  program=gzip-$ver
  archive=$program.tar.$archiveType
  url=http://ftp.gnu.org/gnu/gzip/$archive
  section="5.26. Gzip-1.8"
  
  log "$section"
  
  download $url $archive
  
  extract $archive
  cd $program
  checkRetVal $?
  
  log "starting configure"
  ./configure --prefix=/tools
  checkRetVal $?
  
  callMake
  
  callMakeInstall
  
  log "finished $section"
}

function M4() {
  ver=1.4.18
  archiveType=xz
  program=m4-$ver
  archive=$program.tar.$archiveType
  url=http://ftp.gnu.org/gnu/m4/$archive
  section="5.27. M4-1.4.18"
  
  log "$section"
  
  download $url $archive
  
  extract $archive
  cd $program
  checkRetVal $?
  
  log "starting configure"
  ./configure --prefix=/tools
  checkRetVal $?
  
  callMake
  
  callMakeInstall
  
  log "finished $section"
}

function Make() {
  ver=4.2.1
  archiveType=bz2
  program=make-$ver
  archive=$program.tar.$archiveType
  url=http://ftp.gnu.org/gnu/make/$archive
  section="5.28. Make-4.2.1"
  
  log "$section"
  
  download $url $archive
  
  extract $archive
  cd $program
  checkRetVal $?
  
  log "starting configure"
  ./configure --prefix=/tools --without-guile
  checkRetVal $?
  
  callMake
  
  callMakeInstall
  
  log "finished $section"
}

function Patch() {
  ver=2.7.5
  archiveType=xz
  program=patch-$ver
  archive=$program.tar.$archiveType
  url=http://ftp.gnu.org/gnu/patch/$archive
  section="5.29. Patch-2.7.5"
  
  log "$section"
  
  download $url $archive
  
  extract $archive
  cd $program
  checkRetVal $?
  
  log "starting configure"
  ./configure --prefix=/tools
  checkRetVal $?
  
  callMake
  
  callMakeInstall
  
  log "finished $section"
}

function Perl() {
  ver=5.24.1
  archiveType=bz2
  program=perl-$ver
  archive=$program.tar.$archiveType
  url=http://www.cpan.org/src/5.0/$archive
  section="5.30. Perl-5.24.1"
  
  log "$section"
  
  download $url $archive
  
  extract $archive
  cd $program
  checkRetVal $?
  
  log "starting configure"
  sh Configure -des -Dprefix=/tools -Dlibs=-lm
  checkRetVal $?
  
  callMake
  
  cp -v perl cpan/podlators/scripts/pod2man /tools/bin
  checkRetVal $?
  mkdir -pv /tools/lib/perl5/$ver
  checkRetVal $?
  cp -Rv lib/* /tools/lib/perl5/$ver
  checkRetVal $?
  
  log "finished $section"
}

function Sed() {
  ver=4.4
  archiveType=xz
  program=sed-$ver
  archive=$program.tar.$archiveType
  url=http://ftp.gnu.org/gnu/sed/sed-$ver.tar.xz
  section="5.31. Sed-4.4"
  
  log "$section"
  
  download $url $archive
  
  extract $archive
  cd $program
  checkRetVal $?
  
  log "starting configure"
  ./configure --prefix=/tools
  checkRetVal $?
  
  callMake
  
  callMakeInstall
  
  log "finished $section"
}

function Tar() {
  ver=1.29
  archiveType=xz
  program=tar-$ver
  archive=$program.tar.$archiveType
  url=http://ftp.gnu.org/gnu/tar/tar-$ver.tar.xz
  section="5.32. Tar-1.29"
  
  log "$section"
  
  download $url $archive
  
  extract $archive
  cd $program
  checkRetVal $?
  
  log "starting configure"
  ./configure --prefix=/tools
  checkRetVal $?
  
  callMake
  
  callMakeInstall
  
  log "finished $section"
}

function Texinfo() {
  ver=6.3
  archiveType=xz
  program=texinfo-$ver
  archive=$program.tar.$archiveType
  url=http://ftp.gnu.org/gnu/texinfo/texinfo-$ver.tar.xz
  section="5.33. Texinfo-6.3"
  
  log "$section"
  
  download $url $archive
  
  extract $archive
  cd $program
  checkRetVal $?
  
  log "starting configure"
  ./configure --prefix=/tools
  checkRetVal $?
  
  callMake
  
  callMakeInstall
  
  log "finished $section"
}

function UtilLinux() {
  ver=2.29.1
  archiveType=xz
  program=util-linux-$ver
  archive=$program.tar.$archiveType
  url=https://www.kernel.org/pub/linux/utils/util-linux/v2.29/util-linux-$ver.tar.xz
  section="5.34. Util-linux-2.29.1"
  
  log "$section"
  
  download $url $archive
  
  extract $archive
  cd $program
  checkRetVal $?
  
  log "starting configure"
  ./configure --prefix=/tools                \
              --without-python               \
              --disable-makeinstall-chown    \
              --without-systemdsystemunitdir \
              PKG_CONFIG=""
  checkRetVal $?
  
  callMake
  
  callMakeInstall
  
  log "finished $section"
}

function Xz() {
  ver=5.2.3
  archiveType=xz
  program=xz-$ver
  archive=$program.tar.$archiveType
  url=http://tukaani.org/xz/xz-$ver.tar.xz
  section="5.35. Xz-5.2.3"
  
  log "$section"
  
  download $url $archive
  
  extract $archive
  cd $program
  checkRetVal $?
  
  log "starting configure"
  ./configure --prefix=/tools
  checkRetVal $?
  
  callMake
  
  callMakeInstall
  
  log "finished $section"
}

function Stipping() {
  section="5.36. Stripping"
  
  log "$section"
  
  strip --strip-debug /tools/lib/*
  checkRetVal $?
  
  /usr/bin/strip --strip-unneeded /tools/{,s}bin/*
  checkRetVal $?
  
  rm -rf /tools/{,share}/{info,man,doc}
  checkRetVal $?
  
  log "finished $section"
}

#BinutilsPass1
#GCCPass1
#LinuxApiHeaders
#Glibc
#Libstdc
#BinutilsPass2
#GCCPass2
#TclCore
#Expect
#DejaGNU
#Check
#Ncurses
#Bash
#Bison
#Bzip2
#Coreutils
#Diffutils
#File
#Gawk
#Gettext
#Grep
#Gzip
#M4
#Make
#Patch
#Perl
#Sed
#Tar
#Texinfo
#UtilLinux
Xz
Stipping

log "changing ownership of $LFS/tools to root"
chown -R root:root $LFS/tools
checkRetVal $?

exit 0
